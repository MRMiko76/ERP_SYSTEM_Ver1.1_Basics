// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  username  String?  @unique
  password  String?
  phone     String?
  avatar    String?
  bio       String?
  role      UserRole @default(USER)
  active    Boolean  @default(true)
  lastLogin DateTime?
  permissionsVersion Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  posts     Post[]
  userRoles UserRoleAssignment[]
  createdRoles Role[] @relation("CreatedRoles")
  
  // Indexes for performance optimization
  @@index([active])
  @@index([role])
  @@index([createdAt])
  @@index([lastLogin])
  @@map("users")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  
  // Relations
  createdBy   User     @relation("CreatedRoles", fields: [createdById], references: [id])
  permissions RolePermission[]
  userRoles   UserRoleAssignment[]
  
  // Indexes for performance optimization
  @@index([active])
  @@index([createdAt])
  @@index([createdById])
  @@map("roles")
}

model Permission {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  module      String   // e.g., "users", "products", "orders"
  action      String   // e.g., "create", "read", "update", "delete", "export", "print"
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  rolePermissions RolePermission[]
  
  // Indexes for performance optimization
  @@index([module])
  @@index([action])
  @@index([active])
  @@unique([module, action])
  @@map("permissions")
}

model RolePermission {
  id           String @id @default(cuid())
  roleId       String
  permissionId String
  
  // Relations
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  
  @@unique([roleId, permissionId])
  @@map("role_permissions")
}

model UserRoleAssignment {
  id        String   @id @default(cuid())
  userId    String
  roleId    String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  
  // Indexes for performance optimization
  @@index([userId])
  @@index([roleId])
  @@index([active])
  @@index([userId, active])
  @@index([roleId, active])
  @@unique([userId, roleId])
  @@map("user_role_assignments")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  
  // Indexes for performance optimization
  @@index([authorId])
  @@index([published])
  @@index([createdAt])
   @@map("posts")
}

model PermissionsVersion {
  version   Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("permissions_versions")
}

// Purchase Module Models

// Suppliers table - جدول الموردين
model Supplier {
  id            String   @id @default(cuid())
  name          String   // اسم المورد
  contactPerson String?  // اسم الشخص المسؤول
  phone         String?  // رقم الهاتف
  address       String?  // العنوان
  active        Boolean  @default(true) // حالة المورد (نشط / غير نشط)
  
  // Financial fields for future integration with accounting module
  accountBalance Decimal @default(0) // الرصيد الحالي (مدين / دائن)
  creditLimit    Decimal @default(0) // حد الائتمان
  totalPurchases Decimal @default(0) // إجمالي المشتريات
  
  // Relations
  purchaseOrders PurchaseOrder[]
  supplierTransactions SupplierTransaction[]
  
  // Audit fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  
  // Indexes for performance
  @@index([active])
  @@index([name])
  @@index([contactPerson])
  @@map("suppliers")
}

// Raw Materials table - جدول الخامات
model RawMaterial {
  id               String   @id @default(cuid())
  name             String   // اسم الخام
  availableQuantity Decimal @default(0) // الكمية المتاحة
  unitCost         Decimal  // تكلفة الوحدة
  unit             String   // وحدة القياس (kg, l, piece, etc.)
  materialType     MaterialType // نوع الخام (خامات إنتاج - مواد تعبئة)
  
  // Future integration with warehouse module
  warehouseId      String?  // معرف المخزن (للربط المستقبلي)
  locationInWarehouse String? // موقع الخام في المخزن
  
  // Inventory management
  minimumStock     Decimal @default(0) // الحد الأدنى للمخزون
  maximumStock     Decimal @default(0) // الحد الأقصى للمخزون
  reorderPoint     Decimal @default(0) // نقطة إعادة الطلب
  
  // Relations
  purchaseOrderItems PurchaseOrderItem[]
  stockMovements     StockMovement[]
  
  // Audit fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  
  // Indexes for performance
  @@index([materialType])
  @@index([name])
  @@index([warehouseId])
  @@map("raw_materials")
}

// Purchase Orders table - جدول أوامر الشراء
model PurchaseOrder {
  id                  String   @id @default(cuid())
  orderNumber         String   @unique // رقم أمر الشراء (توليد تلقائي)
  supplierId          String   // معرف المورد
  status              PurchaseOrderStatus @default(DRAFT) // الحالة (مسودة - معتمد - منفذ)
  totalAmount         Decimal  @default(0) // القيمة الإجمالية
  subtotalAmount      Decimal  @default(0) // المبلغ الفرعي
  taxAmount           Decimal  @default(0) // مبلغ الضريبة
  priority            PurchaseOrderPriority @default(MEDIUM) // الأولوية
  paymentTerms        String?  // شروط الدفع
  deliveryAddress     String?  // عنوان التسليم
  notes               String?  // ملاحظات
  
  // Dates
  orderDate           DateTime @default(now()) // تاريخ الأمر
  expectedDeliveryDate DateTime? // تاريخ التسليم المتوقع
  actualDeliveryDate  DateTime? // تاريخ التسليم الفعلي
  
  // Approval workflow
  createdBy           String   // منشئ الأمر
  approvedBy          String?  // معتمد الأمر
  approvedAt          DateTime? // تاريخ الاعتماد
  executedAt          DateTime? // تاريخ التنفيذ
  
  // Relations
  supplier            Supplier @relation(fields: [supplierId], references: [id])
  items               PurchaseOrderItem[]
  supplierTransactions SupplierTransaction[]
  
  // Audit fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Indexes for performance
  @@index([supplierId])
  @@index([status])
  @@index([orderDate])
  @@index([orderNumber])
  @@map("purchase_orders")
}

// Purchase Order Items table - جدول عناصر أوامر الشراء
model PurchaseOrderItem {
  id              String   @id @default(cuid())
  purchaseOrderId String   // معرف أمر الشراء
  materialId      String   // معرف الخام
  quantity        Decimal  // الكمية المطلوبة
  unitPrice       Decimal  // سعر الوحدة
  totalPrice      Decimal  // السعر الإجمالي
  receivedQuantity Decimal @default(0) // الكمية المستلمة
  
  // Relations
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)
  material        RawMaterial @relation(fields: [materialId], references: [id])
  
  // Audit fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Indexes for performance
  @@index([purchaseOrderId])
  @@index([materialId])
  @@map("purchase_order_items")
}

// Supplier Transactions table - جدول حركات الموردين (للربط المستقبلي مع الحسابات)
model SupplierTransaction {
  id              String   @id @default(cuid())
  supplierId      String   // معرف المورد
  purchaseOrderId String?  // معرف أمر الشراء (اختياري)
  transactionType TransactionType // نوع الحركة (دائن / مدين)
  amount          Decimal  // المبلغ
  description     String?  // وصف الحركة
  referenceNumber String?  // رقم مرجعي
  
  // Relations
  supplier        Supplier @relation(fields: [supplierId], references: [id])
  purchaseOrder   PurchaseOrder? @relation(fields: [purchaseOrderId], references: [id])
  
  // Audit fields
  transactionDate DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String?
  
  // Indexes for performance
  @@index([supplierId])
  @@index([purchaseOrderId])
  @@index([transactionDate])
  @@index([transactionType])
  @@map("supplier_transactions")
}

// Stock Movements table - جدول حركات المخزون (للربط المستقبلي مع المخازن)
model StockMovement {
  id              String   @id @default(cuid())
  materialId      String   // معرف الخام
  movementType    StockMovementType // نوع الحركة (وارد / صادر / تعديل)
  quantity        Decimal  // الكمية
  unitCost        Decimal? // تكلفة الوحدة
  totalCost       Decimal? // التكلفة الإجمالية
  referenceType   String?  // نوع المرجع (purchase_order, production_order, etc.)
  referenceId     String?  // معرف المرجع
  notes           String?  // ملاحظات
  
  // Future integration with warehouse module
  warehouseId     String?  // معرف المخزن
  locationFrom    String?  // الموقع المصدر
  locationTo      String?  // الموقع المقصد
  
  // Relations
  material        RawMaterial @relation(fields: [materialId], references: [id])
  
  // Audit fields
  movementDate    DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdBy       String?
  
  // Indexes for performance
  @@index([materialId])
  @@index([movementType])
  @@index([movementDate])
  @@index([referenceType, referenceId])
  @@map("stock_movements")
}

// Enums for Purchase Module

enum MaterialType {
  PRODUCTION_MATERIAL // خامات إنتاج
  PACKAGING_MATERIAL  // مواد تعبئة
  @@map("material_type")
}

enum PurchaseOrderStatus {
  DRAFT     // مسودة
  APPROVED  // معتمد
  EXECUTED  // منفذ
  CANCELLED // ملغي
  @@map("purchase_order_status")
}

enum PurchaseOrderPriority {
  LOW    // منخفضة
  MEDIUM // متوسطة
  HIGH   // عالية
  URGENT // عاجلة
  @@map("purchase_order_priority")
}

enum TransactionType {
  DEBIT  // مدين
  CREDIT // دائن
  @@map("transaction_type")
}

enum StockMovementType {
  IN         // وارد
  OUT        // صادر
  ADJUSTMENT // تعديل
  TRANSFER   // نقل
  @@map("stock_movement_type")
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}